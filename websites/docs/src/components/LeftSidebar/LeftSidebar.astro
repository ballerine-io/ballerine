---
import { getLanguageFromURL } from '../../languages';
import { SIDEBAR } from '../../config';
import SidebarToggleTabGroup from '../SidebarToggleTabGroup/SidebarToggleTabGroup';
import SidebarContent from '../SidebarContent/SidebarContent.astro';
import { Tab } from '../../types';

type Props = {
  currentPage: string;
};

const { currentPage } = Astro.props as Props;
const currentPageMatch = currentPage.endsWith(`/`)
  ? currentPage.slice(1, -1)
  : currentPage.slice(1);
const langCode = getLanguageFromURL(currentPage);
const sidebar = SIDEBAR[langCode];
const [, , tab] = currentPage.split(`/`);
const activeTab: Tab = tab as Tab;
---

<nav aria-labelledby="grid-left">
  <SidebarToggleTabGroup
    client:load
    defaultActiveTab={activeTab}
    labels={{
      // Use i18n here
      learn: `Learn`,
      api: `API`,
    }}
  />
  <ul class="nav-groups">
    <SidebarContent
      type={Tab.LEARN}
      defaultActiveTab={activeTab}
      sidebarSections={sidebar.learn}
      currentPageMatch={currentPageMatch}
    />
    <SidebarContent
      type={Tab.API}
      defaultActiveTab={activeTab}
      sidebarSections={sidebar.api}
      currentPageMatch={currentPageMatch}
    />
  </ul>
</nav>

<script is:inline>
  window.addEventListener(`DOMContentLoaded`, () => {
    const target = document.querySelector(`[aria-current="page"]`);
    if (target && target.offsetTop > window.innerHeight - 100) {
      document.querySelector(`.nav-groups`).scrollTop = target.offsetTop;
    }
  });
</script>

<style>
  nav {
    width: 100%;
    margin-right: 1rem;
  }

  .nav-groups {
    height: 100%;
    margin-top: 2rem;
    padding: 2rem 0;
    overflow-x: visible;
    overflow-y: auto;
    max-height: 100vh;
  }

  .nav-groups > li + li {
    margin-top: 2rem;
  }

  .nav-groups > :first-child {
    padding-top: var(--doc-padding);
  }

  .nav-groups > :last-child {
    padding-bottom: 2rem;
    margin-bottom: var(--theme-navbar-height);
  }

  .nav-group-title {
    font-size: 1rem;
    font-weight: 700;
    padding: 0.1rem 1rem;
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .nav-link a {
    font-size: 1rem;
    margin: 1px;
    padding: 0.3rem 1rem;
    font: inherit;
    color: inherit;
    text-decoration: none;
    display: block;
  }

  .nav-link a:hover,
  .nav-link a:focus {
    background-color: var(--theme-bg-hover);
  }

  .nav-link a[aria-current='page'] {
    color: var(--theme-text-accent);
    background-color: var(--theme-bg-accent);
    font-weight: 600;
  }

  .nav-header {
    font-size: 1.25rem;
  }

  @media (min-width: 50em) {
    .nav-groups {
      padding: 0;
    }
  }
</style>

<style is:global>
  :root.theme-dark .nav-link a[aria-current='page'] {
    color: hsla(var(--color-base-white), 100%, 1);
  }
</style>
