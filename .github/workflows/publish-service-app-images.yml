name: Build Docker images and push to Dockerhub

on:
  workflow_dispatch:

  push:
    branches: [main, dev]
    paths:
      - "apps/**"
      - "services/**"
      - "examples/**"

jobs:
  build-workflow-services:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get package version from package.json
        id: get_version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' services/workflows-service/package.json)
          echo "::set-output name=version::$PACKAGE_VERSION"

      - name: Login to Container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push workflow-services dev image to Github repo with commit tag
        if: success() && github.ref == 'refs/heads/dev'
        uses: depot/build-push-action@v1
        with:
          context: services/workflows-service
          push: true
          target: dev
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.REGISTRY }}/workflow-service:${{ github.sha }}
            ${{ env.REGISTRY }}/workflow-service:${{ steps.get_version.outputs.version }}"
            ${{ env.REGISTRY }}/workflow-service:dev

      - name: Push workflow-services prod image to Github repo with commit tag
        if: success() && github.ref == 'refs/heads/main'
        uses: depot/build-push-action@v1
        with:
          context: services/workflows-service
          push: true
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.REGISTRY }}/workflow-service:${{ github.sha }}
            ${{ env.REGISTRY }}/workflow-service:${{ steps.get_version.outputs.version }}"
            ${{ env.REGISTRY }}/workflow-service:latest
            ${{ env.REGISTRY }}/workflow-service:QA

  build-websocket-services:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' services/websocket-service/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push websocket-services dev image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/dev'
          uses: depot/build-push-action@v1
          with:
            context: services/websocket-service
            push: true
            target: dev
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/websocket-service:${{ github.sha }}
              ${{ env.REGISTRY }}/websocket-service:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/websocket-service:dev

        - name: Push websocket-services prod image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/main'
          uses: depot/build-push-action@v1
          with:
            context: services/websocket-service
            push: true
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/websocket-service:${{ github.sha }}
              ${{ env.REGISTRY }}/websocket-service:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/websocket-service:latest
              ${{ env.REGISTRY }}/websocket-service:QA

  build-headless-examples:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' examples/headless-example/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push websocket-services dev image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/dev'
          uses: depot/build-push-action@v1
          with:
            context: examples/headless-example
            push: true
            target: dev
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/headless-example:${{ github.sha }}
              ${{ env.REGISTRY }}/headless-example:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/headless-example:dev

        - name: Push websocket-services prod image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/main'
          uses: depot/build-push-action@v1
          with:
            context: examples/headless-example
            push: true
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/headless-example:${{ github.sha }}
              ${{ env.REGISTRY }}/headless-example:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/headless-example:latest
              ${{ env.REGISTRY }}/headless-example:QA

  build-backoffice:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' examples/backoffice/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push websocket-services dev image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/dev'
          uses: depot/build-push-action@v1
          with:
            context: apps/backoffice-v2
            push: true
            target: dev
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/backoffice:${{ github.sha }}
              ${{ env.REGISTRY }}/backoffice:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/backoffice:dev

        - name: Push websocket-services prod image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/main'
          uses: depot/build-push-action@v1
          with:
            context: apps/backoffice-v2
            push: true
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/backoffice:${{ github.sha }}
              ${{ env.REGISTRY }}/backoffice:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/backoffice:latest
              ${{ env.REGISTRY }}/backoffice:QA

  build-workflows-dashboard:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Install jq
          run: sudo apt-get install jq

        - name: Get package version from package.json
          id: get_version
          run: |
            PACKAGE_VERSION=$(jq -r '.version' examples/backoffice/package.json)
            echo "::set-output name=version::$PACKAGE_VERSION"

        - name: Login to Container registry
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_HUB_USERNAME }}
            password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

        - name: Push websocket-services dev image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/dev'
          uses: depot/build-push-action@v1
          with:
            context: apps/workflows-dashboard
            push: true
            target: dev
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/workflows-dashboard:${{ github.sha }}
              ${{ env.REGISTRY }}/workflows-dashboard:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/workflows-dashboard:dev

        - name: Push websocket-services prod image to Github repo with commit tag
          if: success() && github.ref == 'refs/heads/main'
          uses: depot/build-push-action@v1
          with:
            context: apps/workflows-dashboard
            push: true
            platforms: linux/arm64,linux/amd64
            tags: |
              ${{ env.REGISTRY }}/workflows-dashboard:${{ github.sha }}
              ${{ env.REGISTRY }}/workflows-dashboard:${{ steps.get_version.outputs.version }}"
              ${{ env.REGISTRY }}/workflows-dashboard:latest
              {{ env.REGISTRY }}/workflows-dashboard:QA
