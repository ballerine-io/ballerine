version: '3'
services:
  server:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${PORT}:3000
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      DB_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}
      PORT: ${PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_PORT: ${DB_PORT}
      SESSION_SECRET: ${SESSION_SECRET}iGdnj4A0YOhj8dHJK7IWSvQKEZsG7P70FFehuddhFPjtg/bSkzFejYILk4Xue6Ilx9y3IAwzR8pV1gb4
      WORKFLOW_DASHBOARD_CORS_ORIGIN: ${WORKFLOW_DASHBOARD_CORS_ORIGIN}
      BACKOFFICE_CORS_ORIGIN: ${BACKOFFICE_CORS_ORIGIN}
      HEADLESS_EXAMPLE_CORS_ORIGIN: ${BACKOFFICE_CORS_ORIGIN}
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      API_KEY: ${API_KEY}
      NODE_ENV: ${NODE_ENV}
    depends_on:
      - migrate
  migrate:
    build:
      context: .
      args:
        NPM_LOG_LEVEL: notice
    command: npm run db:init
    working_dir: /app/server
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      DB_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}
    depends_on:
      db:
        condition: service_healthy
  db:
    image: docker pull sibedge/postgres-plv8:15.3-3.1.7
    ports:
      - ${DB_PORT}:5432
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres15:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -q
        - -d
        - ${DB_NAME}
        - -U
        - ${DB_USER}
      timeout: 45s
      interval: 10s
      retries: 10
volumes:
  postgres15: ~
