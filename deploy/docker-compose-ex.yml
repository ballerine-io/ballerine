version: '3'
services:
  ballerine-case-managment:
    build:
      context: ../apps/backoffice-v2/
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${BACKOFFICE_PORT}:80
    depends_on:
      - ballerine-workflow-service
    restart: on-failure
  ballerine-kyb-app:
    build:
      context: ../examples/kyb-app
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${KYB_APP_PORT}:80
    depends_on:
      - ballerine-workflow-service
    restart: on-failure
    environment:
      VITE_API_URL: 'http://localhost:3000/api/v1/'
      VITE_KYB_DEFINITION_ID: 'kyb_parent_kyc_session_example'
  ballerine-workflow-service:
    build:
      context: ../services/workflows-service/
      args:
        NPM_LOG_LEVEL: notice
    command:
      - /bin/sh
      - -c
      - |
        npm run db:init
        npm run seed:ex
        dumb-init npm run prod
    ports:
      - ${WORKFLOW_SVC_PORT}:${WORKFLOW_SVC_PORT}
    environment:
      BCRYPT_SALT: ${BCRYPT_SALT}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
      DB_URL: postgres://${DB_USER}:${DB_PASSWORD}@ballerine-postgres:${DB_PORT}
      API_KEY: ${API_KEY}
      NODE_ENV: ${NODE_ENV}
      COMPOSE_PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SESSION_SECRET: ${SESSION_SECRET}
      BACKOFFICE_CORS_ORIGIN: http://localhost:${BACKOFFICE_PORT}
      HEADLESS_EXAMPLE_CORS_ORIGIN: http://localhost:${HEADLESS_SVC_PORT}
      WORKFLOW_DASHBOARD_CORS_ORIGIN: http://localhost:${WORKFLOW_DASHBOARD_PORT}
      PORT: ${WORKFLOW_SVC_PORT}
      KYB_EXAMPLE_CORS_ORIGIN: http://localhost:${KYB_APP_PORT}
      IS_DEMO: true
      WEBHOOK_SECRET: webhook_secret
      APP_API_URL: https://alon.ballerine.dev
      EMAIL_API_TOKEN: ''
      EMAIL_API_URL: https://api.sendgrid.com/v3/mail/send
      UNIFIED_API_URL: 'https://unified-api-test.eu.ballerine.app'
      UNIFIED_API_TOKEN: ""
      UNIFIED_API_SHARED_SECRET: ""
    depends_on:
      ballerine-postgres:
        condition: service_healthy
    restart: on-failure
  ballerine-workflows-dashboard:
    build:
      context: ../apps/workflows-dashboard
      args:
        NPM_LOG_LEVEL: notice
    ports:
      - ${WORKFLOW_DASHBOARD_PORT}:80
    depends_on:
      - ballerine-workflow-service
    restart: on-failure
  ballerine-postgres:
    image: sibedge/postgres-plv8:15.3-3.1.7
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres15:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD
        - pg_isready
        - -U
        - admin
      timeout: 45s
      interval: 10s
      retries: 10
volumes:
  postgres15: ~
